{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"AzureDataLakeStorage2": {
			"type": "string"
		},
		"AzureDataLakeStorage1": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "monthly_revenue_original",
								"type": "DatasetReference"
							},
							"name": "revenue1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "monthly_revenue_cleaned",
								"type": "DatasetReference"
							},
							"name": "YearlyRevenue",
							"rejectedDataLinkedService": {
								"referenceName": "[parameters('AzureDataLakeStorage2')]",
								"type": "LinkedServiceReference"
							}
						},
						{
							"dataset": {
								"referenceName": "MonthlyRevenue_FilteredandSortedinPeriod",
								"type": "DatasetReference"
							},
							"name": "afterSortingandFiltering",
							"rejectedDataLinkedService": {
								"referenceName": "[parameters('AzureDataLakeStorage2')]",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "filteringNullValues",
							"description": "filtering the null values which are 32 null values"
						},
						{
							"name": "sort1"
						},
						{
							"name": "MeanRevenueYearly",
							"description": "getting the mean revenue yearly"
						},
						{
							"name": "AddingYearColumn"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Period as date 'dd.MM.yyyy',",
						"          Revenue as decimal(10,0) '000,000,000.000',",
						"          Sales_quantity as integer,",
						"          Average_cost as float,",
						"          The_average_annual_payroll_of_the_region as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> revenue1",
						"revenue1 filter(!isNull(Revenue),",
						"     partitionBy('hash', 1)) ~> filteringNullValues",
						"filteringNullValues sort(asc(Period, true)) ~> sort1",
						"AddingYearColumn aggregate(groupBy(Year),",
						"     Mean_Revenue = toDecimal(avg(Revenue)),",
						"          Mean_Sales_quantity = toDecimal(avg(Sales_quantity)),",
						"          Mean_cost_of_Production = toDecimal(avg(Average_cost))) ~> MeanRevenueYearly",
						"sort1 derive(Year = year(Period)) ~> AddingYearColumn",
						"MeanRevenueYearly sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['YearlyRevenue'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 2,",
						"     partitionBy('hash', 1)) ~> YearlyRevenue",
						"sort1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['CleanedMonthlyRevenue'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     partitionBy('hash', 1)) ~> afterSortingandFiltering"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/monthly_revenue_original')]",
				"[concat(variables('factoryId'), '/datasets/monthly_revenue_cleaned')]",
				"[concat(variables('factoryId'), '/datasets/MonthlyRevenue_FilteredandSortedinPeriod')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/monthly_revenue_original')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureDataLakeStorage1')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Month_Value_1.csv",
						"folderPath": "Project/azure project",
						"fileSystem": "historicaldata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Period",
						"type": "String"
					},
					{
						"name": "Revenue",
						"type": "String"
					},
					{
						"name": "Sales_quantity",
						"type": "String"
					},
					{
						"name": "Average_cost",
						"type": "String"
					},
					{
						"name": "The_average_annual_payroll_of_the_region",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/monthly_revenue_cleaned')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureDataLakeStorage2')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "YearlyRevenue",
						"folderPath": "Project/azure project",
						"fileSystem": "historicaldata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MonthlyRevenue_FilteredandSortedinPeriod')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureDataLakeStorage2')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "CleanMonthlyRevenue",
						"folderPath": "Project/azure project",
						"fileSystem": "historicaldata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		}
	]
}