{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "monthly_revenue_original",
						"type": "DatasetReference"
					},
					"name": "revenue1"
				},
				{
					"dataset": {
						"referenceName": "MonthlyRevenue_FilteredandSortedinPeriod",
						"type": "DatasetReference"
					},
					"name": "MonthlyRevenueFilteredandSorted"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "monthly_revenue_cleaned",
						"type": "DatasetReference"
					},
					"name": "YearlyRevenue",
					"rejectedDataLinkedService": {
						"referenceName": "AzureDataLakeStorage2",
						"type": "LinkedServiceReference"
					}
				},
				{
					"dataset": {
						"referenceName": "MonthlyRevenue_FilteredandSortedinPeriod",
						"type": "DatasetReference"
					},
					"name": "afterSortingandFiltering",
					"rejectedDataLinkedService": {
						"referenceName": "AzureDataLakeStorage2",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "filteringNullValues",
					"description": "filtering the null values which are 32 null values"
				},
				{
					"name": "sort1"
				},
				{
					"name": "MeanRevenueYearly",
					"description": "getting the mean revenue yearly"
				},
				{
					"name": "AddingYearColumn"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Period as date 'dd.MM.yyyy',",
				"          Revenue as decimal(10,0) '000,000,000.000',",
				"          Sales_quantity as integer,",
				"          Average_cost as float,",
				"          The_average_annual_payroll_of_the_region as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     partitionBy('hash', 1)) ~> revenue1",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> MonthlyRevenueFilteredandSorted",
				"revenue1 filter(!isNull(Revenue),",
				"     partitionBy('hash', 1)) ~> filteringNullValues",
				"filteringNullValues sort(asc(Period, true)) ~> sort1",
				"AddingYearColumn aggregate(groupBy(Year),",
				"     Mean_Revenue = toDecimal(avg(Revenue)),",
				"          Mean_Sales_quantity = toDecimal(avg(Sales_quantity)),",
				"          Mean_cost_of_Production = toDecimal(avg(Average_cost))) ~> MeanRevenueYearly",
				"sort1 derive(Year = year(Period)) ~> AddingYearColumn",
				"MeanRevenueYearly sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> YearlyRevenue",
				"sort1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> afterSortingandFiltering"
			]
		}
	}
}